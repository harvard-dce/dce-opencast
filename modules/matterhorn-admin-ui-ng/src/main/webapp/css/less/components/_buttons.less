/**
 * Licensed to The Apereo Foundation under one or more contributor license
 * agreements. See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 *
 * The Apereo Foundation licenses this file to you under the Educational
 * Community License, Version 2.0 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of the License
 * at:
 *
 *   http://opensource.org/licenses/ecl2.txt
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
 * License for the specific language governing permissions and limitations under
 * the License.
 *
 */
// Button mixin
.btn(@color) {
    border-radius: @main-border-radius;
    color: #fff !important;
    padding: 5px 10px;
    position: relative;

    &:focus {
        // .box-shadow(0 0 2px 1px rgba(55, 141, 212, 0.5));
    }

    // Btn colours based on parameter
    .styles() when (@color = green-dark-bg) {
        box-shadow: inset 0px 1px 0px 0px #48dc97, 0px 2px 3px 1px rgba(0,0,0,.05);

        #gradient > .vertical(#39c985, #2d9b67);

        .border(#193043);

        &:hover {
            .border(darken(#193043, 5%));
            #gradient > .vertical(lighten(#39c985, 5%), darken(#2d9b67, 5%));
        }

        &:active {
            .box-shadow(inset 0px 3px 10px 1px darken(#2d9b67, 5%));
        }
    }

    .styles() when (@color = blue-dark-bg) {
        box-shadow: inset 0px 1px 0px 0px #456c8e, 0px 2px 3px 1px rgba(0,0,0,.05);

        #gradient > .vertical(#3a5e7e, #274661);

        .border(#193043);

        &:hover {
            .border(darken(#193043, 5%));
            #gradient > .vertical(lighten(#3a5e7e, 5%), darken(#274661, 2%));
        }

        &:active {
            .box-shadow(inset 0px 3px 10px 1px darken(#274661, 3%));
        }
    }

    // ---------------------

    .styles() when (@color = green) {
        box-shadow: inset 0px 1px 0px 0px #48dc97, 0px 2px 3px 1px rgba(0,0,0,.05);

        #gradient > .vertical(#39c985, #2d9b67);

        .border(darken(@green, 20%));

        &:hover {
            .border(darken(@green, 25%));
            #gradient > .vertical(lighten(#39c985, 5%), darken(#2d9b67, 5%));
        }

        &:active {
            .box-shadow(inset 0px 3px 10px 1px darken(#2d9b67, 5%));
        }
    }

    .styles() when (@color = blue) {
        box-shadow: inset 0px 1px 0px 0px #456c8e, 0px 2px 3px 1px rgba(0,0,0,.05);

        #gradient > .vertical(#3a5e7e, #274661);

        .border(#193043);

        &:hover {
            #gradient > .vertical(darken(#3a5e7e, 1%), darken(#274661, 2%));
        }

        &:active {
            .box-shadow(inset 0 3px 10px 1px darken(#274661, 3%));
        }
    }

    .styles() when (@color = lightblue) {

        box-shadow: inset 0px 1px 0px 0px lighten(#388ed6, 10%), 0px 2px 3px 1px rgba(0,0,0,.05);

        #gradient > .vertical(#388ed6, #2b77b9);

        .border(darken(#2b77b9, 5%));

        &:hover {
            #gradient > .vertical(lighten(#388ed6, 5%), darken(#2b77b9, 5%));
        }

        &:active {
            .box-shadow(inset 0px 3px 10px 1px darken(#2b77b9, 5%));
        }
    }

    .styles() when (@color = brightblue) {

        box-shadow: inset 0px 1px 0px 0px lighten(#55cef2, 10%), 0px 2px 3px 1px rgba(0,0,0,.05);

        #gradient > .vertical(#55cef2, #4da1f7);

        .border(darken(#4da1f7, 10%));

        &:hover {
            #gradient > .vertical(lighten(#55cef2, 5%), darken(#4da1f7, 5%));
        }

        &:active {
            .box-shadow(inset 0px 3px 10px 1px darken(#4da1f7, 5%));
        }

    }

    .styles() when (@color = red) {
        box-shadow: inset 0px 1px 0px 0px lighten(@alt-red, 10%), 0px 2px 3px 1px rgba(0,0,0,.05);

        #gradient > .vertical(lighten(@alt-red, 5%), darken(@alt-red, 5%));

        .border(darken(@alt-red, 20%));

        &:hover {
            .border(darken(@alt-red, 30%));
            #gradient > .vertical(lighten(@alt-red, 10%), darken(@alt-red, 10%));
        }

        &:active {
            .box-shadow(inset 0px 3px 10px 1px darken(@alt-red, 5%));
        }
    }

    .styles() when (@color = grey) {

        box-shadow: inset 0px 1px 0px 0px #fff, 0px 2px 3px 1px rgba(0,0,0,.05);

        #gradient > .vertical(#fafafa, #ebeded);
        .border(darken(@light-border-color, 10%));

        color: @black-40 !important;
        text-shadow: 0px 1px 0px #fff;

        &:hover {
            .border(darken(@light-border-color, 5%));
            #gradient > .vertical(#fafafa, darken(#ebeded, 5%));
            color: @black-50 !important;
        }

        &:active {
            .box-shadow(inset 0px 1px 6px 2px rgba(0,0,0,.05));
        }
    }

    .styles() when (@color = white) {

        #gradient > .vertical(#fff, #f7f7f7);
        .border(@main-border-color);
        box-shadow: inset 0px 1px 0px 0px #fff, 0px 1px 2px rgba(0,0,0,.05);
        outline: none;
        color: @black-40 !important;
        text-shadow: 0px 1px 0px #fff;

        &:hover {
            .border(darken(@main-border-color, 2%));
            #gradient > .vertical(darken(#fff, 1%), darken(#f7f7f7, 1%));
            color: @black-50 !important;
        }

        &:active {
            .box-shadow(inset 0px 1px 6px 2px rgba(0,0,0,.05));
        }
    }

    > i {
        display: inline-block;
        margin-right: 10px;
    }

    &:hover { color: #fff !important; }

    // Include
    .styles();

} // btn()

// Std button styles
button {
    height: @btn-height;
    min-width: 120px;
    font-size: 12px;
    font-weight: 600;
    color: #fff;
    border-radius: @main-border-radius;
    display: inline-block;

}

// Buttons
.add-btn {
    .btn(green);
    display: inline !important;

    // Circle button
    &.circle-btn {
        border-radius: 50%;
        display: inline-block !important;
        padding: 0;

        .size(24px, 24px);

        > i {
            position: absolute;
            top: 7px; left: 7px;
        }
    }
}

.cancel-btn { .btn(grey); }

.blue-btn { .btn(lightblue); }

.red-btn,
.danger-btn {
    .btn(red);
}
